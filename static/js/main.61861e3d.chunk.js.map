{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Cv","name","title","className","App","useState","documents","setDocuments","useEffect","sanity","api","projectId","dataset","url","fetch","then","result","json","getDocuments","map","doc","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA6BA,SAASA,EAAT,GAA8B,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAClB,OACE,sBAAKC,UAAU,KAAf,UACE,6BAAKF,IACL,4BAAIC,OAKKE,MAzBf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,KAMb,OAHAC,qBAAU,YAZZ,WAAyB,IAAD,EACSC,EAAOC,IAA9BC,EADc,EACdA,UAAWC,EADG,EACHA,QACbC,EAAG,kBAAcF,EAAd,iDAAgEC,EAAhE,2BAET,OAAOE,MAAMD,GACVE,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GAAM,OAAIA,EAAOA,WAOvBE,GAAeH,KAAKR,KACnB,IAED,gCACE,oDACCD,EAAUa,KAAI,SAAAC,GAAG,OAChB,cAACpB,EAAD,eAAQoB,WCXDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.61861e3d.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport sanity from \"./sanity.json\";\n\nfunction getDocuments() {\n  const { projectId, dataset } = sanity.api;\n  const url = `https://${projectId}.api.sanity.io/v2021-05-28/data/query/${dataset}?query=*[_type == \"cv\"]`;\n\n  return fetch(url)\n    .then(result => result.json())\n    .then(result => result.result);\n}\n\nfunction App() {\n  const [documents, setDocuments] = useState([]);\n\n  useEffect(() => {\n    getDocuments().then(setDocuments);\n  }, []);\n  return (\n    <div>\n      <h1>Sanity app example</h1>\n      {documents.map(doc => (\n        <Cv {...doc} />\n      ))}\n    </div>\n  );\n}\n\nfunction Cv({ name, title }) {\n  return (\n    <div className=\"cv\">\n      <h2>{name}</h2>\n      <p>{title}</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}